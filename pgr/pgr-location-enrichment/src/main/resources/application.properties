kafka.topics.pgr.validated.name=egov.pgr.validated
kafka.topics.pgr.validated.id=grievanceLocationEnrichment
kafka.topics.pgr.validated.group=grievanceLocationEnrichment-1
kafka.topics.pgr.boundary_enriched.name=egov.pgr.locationupdated

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.egov.pgr.location.contract.HashMapDeserializer
spring.kafka.consumer.group-id=grievances

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#Service url
egov.services.boundary.host=http://localhost:8082/
egov.services.boundary.context.fetch_by_lat_lng=egov-location/boundarys?boundary.latitude={latitude}&boundary.longitude={longitude}&boundary.tenantId={tenantid}
egov.services.boundary.context.fetch_by_hierarchy_id=egov-location/crosshierarchys/_search
#Set context root
server.contextPath=/pgr

spring.main.web-environment=false

logging.pattern.console=%clr(%X{CORRELATION_ID:-}) %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}

app.timezone=UTC

