server.port=8084
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/wcms_msdb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.generate-ddl=false
spring.jpa.show-sql=true
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.EJB3NamingStrategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.database=POSTGRESQL
spring.data.jpa.repositories.enabled=true
#Set context root
server.contextPath=/pgr

#Kafka general config
outgoing.queue.name=egov.pgr.validated

crn.host=http://localhost:8088/
user.service.host=http://localhost:8081/
egov.services.user_by_id=user/_search
user.service.url=http://localhost:8081/
pgrmaster.host=http://localhost:8093/
otp.host=http://localhost:8089/
sms.topic=core.notification.sms
hremployee.host=http://localhost:9999/
egov.workflow.host=http://localhost:8086/
egov.workflow.url=workflow/router/v1/_search?tenantId={tenantId}&hierarchyType={hierarchyType}

max.js.script.cpu.time=2000
js.script.thread.count=2

egov.services.user.get_user_details=user/_details?access_token=
egov.services.user.get_user_by_username=user/_search

kafka.topics.pgr.workflowupdated.name=egov.pgr.workflowupdated

spring.kafka.consumer.value-deserializer=org.egov.pgrrest.write.consumer.HashMapDeserializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id=pgr-persist
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


kafka.topics.receivingcenter.create.name=egov.pgr.receiving-centertype-create
kafka.topics.receivingcenter.create.key=receiving-centertype-create

kafka.topics.receivingcenter.update.name=egov.pgr.receiving-centertype-update
kafka.topics.receivingcenter.update.key=receiving-centertype-update


kafka.topics.receivingmode.create.name=egov.pgr.receiving-modetype-create
kafka.topics.receivingmode.create.key=receiving-modetype-create

kafka.topics.receivingmode.update.name=egov.pgr.receiving-modetype-update
kafka.topics.receivingmode.update.key=receiving-modetype-update



flyway.user=postgres
flyway.password=postgres
flyway.outOfOrder=true
flyway.table=pgr_rest_schema_version
flyway.baseline-on-migrate=true
flyway.url=jdbc:postgresql://localhost:5432/devdb
flyway.locations=db/migration/ddl,db/migration/seed,db/migration/dev
flyway.enabled=false

es.host=localhost
es.transport.port=9300
es.cluster.name=docker-cluster
es.index.name=service-request
es.document.type=serviceRequest
es.log.request=false

logging.pattern.console=%clr(%X{CORRELATION_ID:-}) %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}


# KAFKA TOPIC CONFIGURATIONS
kafka.topics.categorytype.create.name=egov.pgr.categorytype-create
kafka.topics.categorytype.create.key=categorytype-create

app.timezone=UTC

#toggle for postgres and elastic search
postgres.enabled = true
